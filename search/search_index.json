{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Octetful Notes - Graphs Summary A collection of notes on Graph databases, compute engines and algorithms. Visualisation This section covers different tools and techniques for visualising graph data structures. Graph Databases This section covers different graph databases and compute engines. Algorithms, Datastructure and Mathematics This section covers the theoritical areas of graph computing.","title":"Home"},{"location":"#octetful-notes-graphs","text":"","title":"Octetful Notes - Graphs"},{"location":"#summary","text":"A collection of notes on Graph databases, compute engines and algorithms.","title":"Summary"},{"location":"#visualisation","text":"This section covers different tools and techniques for visualising graph data structures.","title":"Visualisation"},{"location":"#graph-databases","text":"This section covers different graph databases and compute engines.","title":"Graph Databases"},{"location":"#algorithms-datastructure-and-mathematics","text":"This section covers the theoritical areas of graph computing.","title":"Algorithms, Datastructure and Mathematics"},{"location":"graphdb/","text":"Octetful Notes - Graphs - Graph Databases This section covers graph databases and graph compute engines along with some other tools and libraries. Neo4J Neo4j is a highly scalable native graph database, purpose-built to leverage not only data but also data relationships. Using Neo4j, developers build intelligent applications that traverse today's large, interconnected datasets in real time. Powered by a native graph storage and processing engine, Neo4j delivers an intuitive, flexible and secure database for unique, actionable insights. This section covers details of the Neo4J graph database. Apache Tinkerpop Apache TinkerPop\u2122 is a graph computing framework for both graph databases (OLTP) and graph analytic systems (OLAP). This section covers details of the Apache Tinkerpop framework. Other Graph Databases & Frameworks JGraphT JGraphT is a Java library of graph theory data structures and algorithms There's an Overview for Application Developers to help get you started with using the JGraphT library in your own applications. BlazeGraph Blazegraph\u2122 DB is a ultra high-performance graph database supporting Blueprints and RDF/SPARQL APIs. It supports up to 50 Billion edges on a single machine. It is in production use for Fortune 500 customers such as EMC, Autodesk, and many others. It is supporting key Precision Medicine applications and has wide-spread usage for life science applications. It is used extensively to support Cyber anaytics in commercial and government applications. It powers the Wikimedia Foundation's Wikidata Query Service. JanusGraph JanusGraph is a scalable graph database optimized for storing and querying graphs containing hundreds of billions of vertices and edges distributed across a multi-machine cluster. JanusGraph is a project under The Linux Foundation, and includes participants from Expero, Google, GRAKN.AI, Hortonworks, IBM and Amazon. NeptuneDB Amazon Neptune is a fast, reliable, fully managed graph database service that makes it easy to build and run applications that work with highly connected datasets. You can explore more details of the Neptune Graph Data Model .","title":"Octetful Notes - Graphs - Graph Databases"},{"location":"graphdb/#octetful-notes-graphs-graph-databases","text":"This section covers graph databases and graph compute engines along with some other tools and libraries.","title":"Octetful Notes - Graphs - Graph Databases"},{"location":"graphdb/#neo4j","text":"Neo4j is a highly scalable native graph database, purpose-built to leverage not only data but also data relationships. Using Neo4j, developers build intelligent applications that traverse today's large, interconnected datasets in real time. Powered by a native graph storage and processing engine, Neo4j delivers an intuitive, flexible and secure database for unique, actionable insights. This section covers details of the Neo4J graph database.","title":"Neo4J"},{"location":"graphdb/#apache-tinkerpop","text":"Apache TinkerPop\u2122 is a graph computing framework for both graph databases (OLTP) and graph analytic systems (OLAP). This section covers details of the Apache Tinkerpop framework.","title":"Apache Tinkerpop"},{"location":"graphdb/#other-graph-databases-frameworks","text":"","title":"Other Graph Databases &amp; Frameworks"},{"location":"graphdb/#jgrapht","text":"JGraphT is a Java library of graph theory data structures and algorithms There's an Overview for Application Developers to help get you started with using the JGraphT library in your own applications.","title":"JGraphT"},{"location":"graphdb/#blazegraph","text":"Blazegraph\u2122 DB is a ultra high-performance graph database supporting Blueprints and RDF/SPARQL APIs. It supports up to 50 Billion edges on a single machine. It is in production use for Fortune 500 customers such as EMC, Autodesk, and many others. It is supporting key Precision Medicine applications and has wide-spread usage for life science applications. It is used extensively to support Cyber anaytics in commercial and government applications. It powers the Wikimedia Foundation's Wikidata Query Service.","title":"BlazeGraph"},{"location":"graphdb/#janusgraph","text":"JanusGraph is a scalable graph database optimized for storing and querying graphs containing hundreds of billions of vertices and edges distributed across a multi-machine cluster. JanusGraph is a project under The Linux Foundation, and includes participants from Expero, Google, GRAKN.AI, Hortonworks, IBM and Amazon.","title":"JanusGraph"},{"location":"graphdb/#neptunedb","text":"Amazon Neptune is a fast, reliable, fully managed graph database service that makes it easy to build and run applications that work with highly connected datasets. You can explore more details of the Neptune Graph Data Model .","title":"NeptuneDB"},{"location":"graphdb/neo4j/","text":"Octetful Notes - Graphs - Neo4J This section covers details on the neo4j graph database. Neo4j cypher manual v4.1 authored by the Neo4j team. Using Neo4j Browser with Embedded Neo4j Subgraphs Expand to subgraph procedure Analytical Subgraph Overlays in Neo4j The with clause Data Import Guides Importing CSV Data into Neo4j Dynamic Relationship Loading To create dynamic relationship labels in Neo4j, you could call a stored proc as follows: LOAD CSV WITH HEADERS FROM \"file:///relations.csv\" AS row MATCH (f:Node), (s:Node) WHERE f.Name = row.FromNode AND s.Name = row.ToNode CALL apoc.create.relationship(f, row.RelationType,{}, s) YIELD rel REMOVE rel.noOp","title":"Neo4J"},{"location":"graphdb/neo4j/#octetful-notes-graphs-neo4j","text":"This section covers details on the neo4j graph database. Neo4j cypher manual v4.1 authored by the Neo4j team. Using Neo4j Browser with Embedded Neo4j","title":"Octetful Notes - Graphs - Neo4J"},{"location":"graphdb/neo4j/#subgraphs","text":"Expand to subgraph procedure Analytical Subgraph Overlays in Neo4j The with clause","title":"Subgraphs"},{"location":"graphdb/neo4j/#data-import-guides","text":"Importing CSV Data into Neo4j Dynamic Relationship Loading To create dynamic relationship labels in Neo4j, you could call a stored proc as follows: LOAD CSV WITH HEADERS FROM \"file:///relations.csv\" AS row MATCH (f:Node), (s:Node) WHERE f.Name = row.FromNode AND s.Name = row.ToNode CALL apoc.create.relationship(f, row.RelationType,{}, s) YIELD rel REMOVE rel.noOp","title":"Data Import Guides"},{"location":"graphdb/tinkerpop/","text":"Octetful Notes - Graphs - Apache Tinkerpop This section covers the Apache Tinkerpop framework. Getting Started Guide Recipes Reference Javadoc (full) Gremlin Practical Guide Book Tinkerpop Tools Gremlify - An online gremlin console that \"mostly\" works. Doesn't support many common operations like subgraphs, or even proper addE() operations. Kryo - a fast and efficient binary object graph serialization framework for Java. Graphexp - Graphexp is a lightweight web interface to explore and display a graph stored in a Gremlin graph database, via the Gremlin server (version 3.2.x, 3.3.x or 3.4.x). Dockerized Gremlin Console - A docker container image for gremlin console. See notes below for more information on usage. Dockerized Gremlin Server - A docker container image for gremlin server. Starting Containerized Gremlin Console To start a containerized gremlin console use the following commands: docker pull tinkerpop/gremlin-console docker run -it tinkerpop/gremlin-console","title":"Apache Tinkerpop"},{"location":"graphdb/tinkerpop/#octetful-notes-graphs-apache-tinkerpop","text":"This section covers the Apache Tinkerpop framework. Getting Started Guide Recipes Reference Javadoc (full) Gremlin Practical Guide Book","title":"Octetful Notes - Graphs - Apache Tinkerpop"},{"location":"graphdb/tinkerpop/#tinkerpop-tools","text":"Gremlify - An online gremlin console that \"mostly\" works. Doesn't support many common operations like subgraphs, or even proper addE() operations. Kryo - a fast and efficient binary object graph serialization framework for Java. Graphexp - Graphexp is a lightweight web interface to explore and display a graph stored in a Gremlin graph database, via the Gremlin server (version 3.2.x, 3.3.x or 3.4.x). Dockerized Gremlin Console - A docker container image for gremlin console. See notes below for more information on usage. Dockerized Gremlin Server - A docker container image for gremlin server. Starting Containerized Gremlin Console To start a containerized gremlin console use the following commands: docker pull tinkerpop/gremlin-console docker run -it tinkerpop/gremlin-console","title":"Tinkerpop Tools"},{"location":"graphtheory/","text":"Octetful Notes - Graphs - Graph Theory This section covers notes on the graph theory topics such as graph algorithms, data structures and mathematics. Temporal Graphs What if we could add a time dimension to a graph as well, thereby modelling time variant relationships across the nodes? How would we do this? This section contains some references. There's a conference paper on Network Similarity Prediction in Time Evolving Graphs: A Machine Learning approach that covers some of the basic concepts. There's also another IEEE conference paper on Compact Data Structures for Temporal Graphs covering some of these concepts. Quiver In Mathematics, a quiver is a directed graph where multiple edges between vertices are allowed. In other words it is a multidigraph structre. You can read more on the topic on this Wikipedia article .","title":"Algorithms, Data Structures and Mathematics"},{"location":"graphtheory/#octetful-notes-graphs-graph-theory","text":"This section covers notes on the graph theory topics such as graph algorithms, data structures and mathematics.","title":"Octetful Notes - Graphs - Graph Theory"},{"location":"graphtheory/#temporal-graphs","text":"What if we could add a time dimension to a graph as well, thereby modelling time variant relationships across the nodes? How would we do this? This section contains some references. There's a conference paper on Network Similarity Prediction in Time Evolving Graphs: A Machine Learning approach that covers some of the basic concepts. There's also another IEEE conference paper on Compact Data Structures for Temporal Graphs covering some of these concepts.","title":"Temporal Graphs"},{"location":"graphtheory/#quiver","text":"In Mathematics, a quiver is a directed graph where multiple edges between vertices are allowed. In other words it is a multidigraph structre. You can read more on the topic on this Wikipedia article .","title":"Quiver"},{"location":"visualisation/","text":"Octetful Notes - Graphs - Visualisation This section contains details on different visualisation tools and techniques used for graphs. Graphviz Graphviz is open source graph visualization software. Graph visualization is a way of representing structural information as diagrams of abstract graphs and networks. The DOT Language DOT is a graph description language. DOT graphs are typically files with the filename extension gv or dot. The extension gv is preferred, to avoid confusion with the extension dot used by versions of Microsoft Word before 2007. Various programs can process DOT files. Some, such as dot, neato, twopi, circo, fdp, and sfdp, can read a DOT file and render it in graphical form. Others, such as gvpr, gc, acyclic, ccomps, sccmap, and tred, read DOT files and perform calculations on the represented graph. Finally, others, such as lefty, dotty, and grappa, provide an interactive interface. The GVedit tool combines a text editor with noninteractive image viewer. Most programs are part of the Graphviz package or use it internally. -- Wikipedia You can find the the abstract grammar defining the graph language here . There is also an active Reddit thread of discussions for more graph visualisation libraries . GraphViz React graphviz-react provides a simple to use component for rendering Graphviz objects in React. You can find the source code for graphviz-react on Github . IntelliJ IDEA Plugin There is a plugin that can provide basic editing support for dot language files ( *.dot and *.gv ) in IntelliJ IDEA called the dotPlugin . Further Explorations Tinkerpop IO adapter for Dot language?","title":"Visualisation"},{"location":"visualisation/#octetful-notes-graphs-visualisation","text":"This section contains details on different visualisation tools and techniques used for graphs.","title":"Octetful Notes - Graphs - Visualisation"},{"location":"visualisation/#graphviz","text":"Graphviz is open source graph visualization software. Graph visualization is a way of representing structural information as diagrams of abstract graphs and networks.","title":"Graphviz"},{"location":"visualisation/#the-dot-language","text":"DOT is a graph description language. DOT graphs are typically files with the filename extension gv or dot. The extension gv is preferred, to avoid confusion with the extension dot used by versions of Microsoft Word before 2007. Various programs can process DOT files. Some, such as dot, neato, twopi, circo, fdp, and sfdp, can read a DOT file and render it in graphical form. Others, such as gvpr, gc, acyclic, ccomps, sccmap, and tred, read DOT files and perform calculations on the represented graph. Finally, others, such as lefty, dotty, and grappa, provide an interactive interface. The GVedit tool combines a text editor with noninteractive image viewer. Most programs are part of the Graphviz package or use it internally. -- Wikipedia You can find the the abstract grammar defining the graph language here . There is also an active Reddit thread of discussions for more graph visualisation libraries .","title":"The DOT Language"},{"location":"visualisation/#graphviz-react","text":"graphviz-react provides a simple to use component for rendering Graphviz objects in React. You can find the source code for graphviz-react on Github .","title":"GraphViz React"},{"location":"visualisation/#intellij-idea-plugin","text":"There is a plugin that can provide basic editing support for dot language files ( *.dot and *.gv ) in IntelliJ IDEA called the dotPlugin .","title":"IntelliJ IDEA Plugin"},{"location":"visualisation/#further-explorations","text":"Tinkerpop IO adapter for Dot language?","title":"Further Explorations"}]}